"use strict";(self.webpackChunkdynamo=self.webpackChunkdynamo||[]).push([[183],{6916:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=r(4848),o=r(8453);const s={},l="Dynamo Form Builder Documentation",a={id:"dynamo-framework/Dynamo Form Builder Documentation",title:"Dynamo Form Builder Documentation",description:"---",source:"@site/docs/dynamo-framework/Dynamo Form Builder Documentation.md",sourceDirName:"dynamo-framework",slug:"/dynamo-framework/Dynamo Form Builder Documentation",permalink:"/docs/dynamo-framework/Dynamo Form Builder Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dynamo-framework/Dynamo Form Builder Documentation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dynamo Docs with Spring Boot using CommonMark",permalink:"/docs/dynamo-framework/Dynamo Docs with Spring Boot using CommonMark"},next:{title:"Dynamo Generics CRUD Module Documentation",permalink:"/docs/dynamo-framework/Dynamo Generics CRUD Module Documentation (1)"}},t={},d=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Relevant Dependencies, Plugins, and Properties",id:"relevant-dependencies-plugins-and-properties",level:3},{value:"Module: dynamo-form-builder-bff",id:"module-dynamo-form-builder-bff",level:2},{value:"Module Introduction",id:"module-introduction",level:3},{value:"Vocabulary/Terminology",id:"vocabularyterminology",level:3},{value:"Technologies/3rd Party Libraries",id:"technologies3rd-party-libraries",level:3},{value:"Sample Use Cases",id:"sample-use-cases",level:3},{value:"Module: dynamo-form-builder-service",id:"module-dynamo-form-builder-service",level:2},{value:"Module Introduction",id:"module-introduction-1",level:3},{value:"Vocabulary/Terminology",id:"vocabularyterminology-1",level:3},{value:"Technologies/3rd Party Libraries",id:"technologies3rd-party-libraries-1",level:3},{value:"Sample Use Cases",id:"sample-use-cases-1",level:3},{value:"Getting Started",id:"getting-started",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dynamo-form-builder-documentation",children:"Dynamo Form Builder Documentation"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["This document provides an overview of the ",(0,i.jsx)(n.strong,{children:"dynamo-form-builder"})," project, including relevant dependencies, plugins, and\nproperties for custom application builds. The project is divided into multiple modules, each serving a distinct purpose."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Java 17.x"}),"\n",(0,i.jsx)(n.li,{children:"Maven 3.8.x"}),"\n",(0,i.jsx)(n.li,{children:"PostgreSQL 12.x"}),"\n",(0,i.jsx)(n.li,{children:"Dynamo Generics Crud"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"relevant-dependencies-plugins-and-properties",children:"Relevant Dependencies, Plugins, and Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jackson"}),": For JSON processing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flyway"}),": For DB Migration"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"module-dynamo-form-builder-bff",children:"Module: dynamo-form-builder-bff"}),"\n",(0,i.jsx)(n.h3,{id:"module-introduction",children:"Module Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"dynamo-form-builder-bff"})," is the backend-for-frontend module responsible for handling client requests and\ncommunicating with the service layer. It provides RESTful APIs to manage forms, invitations, and responses."]}),"\n",(0,i.jsx)(n.h3,{id:"vocabularyterminology",children:"Vocabulary/Terminology"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"BFF (Backend for Frontend)"}),": A pattern where a specific backend service is created to serve a particular frontend."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DTO (Data Transfer Object)"}),": Objects used to transfer data between different parts of the application."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"technologies3rd-party-libraries",children:"Technologies/3rd Party Libraries"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spring Web"}),": For building web applications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenAPI (springdoc-openapi)"}),": For API documentation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sample-use-cases",children:"Sample Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Form Management"}),": Create, update, delete, and retrieve forms."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Invitation Handling"}),": Manage form invitations, including sending, updating, and tracking responses."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response Management"}),": Collect and process form responses."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"module-dynamo-form-builder-service",children:"Module: dynamo-form-builder-service"}),"\n",(0,i.jsx)(n.h3,{id:"module-introduction-1",children:"Module Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"dynamo-form-builder-service"})," module is responsible for the core business logic and data management. It interacts\nwith the database to perform CRUD operations on forms, invitations, and responses."]}),"\n",(0,i.jsx)(n.h3,{id:"vocabularyterminology-1",children:"Vocabulary/Terminology"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DAO (Data Access Object)"}),": A pattern that provides an abstract interface to some type of database or other\npersistence mechanism."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Entity"}),": A lightweight persistent domain object."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"technologies3rd-party-libraries-1",children:"Technologies/3rd Party Libraries"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spring Data JPA"}),": For database interactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hibernate"}),": ORM (Object-Relational Mapping) framework."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jackson"}),": For JSON serialization and deserialization."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sample-use-cases-1",children:"Sample Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CRUD Operations"}),": Perform create, read, update, and delete operations on forms, invitations, and responses."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version Management"}),": Handle multiple versions of a form, including versioning and version comparison."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clone the repository"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:Breezeware-OS/dynamo.git\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigate to the module directory"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend/dynamo-sdk-lib/dynamo-form-builder\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Build the module"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mvn clean install\n"})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);